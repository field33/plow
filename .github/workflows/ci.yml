name: CI
on: [push]

jobs:
  test:
    name: cargo test
    strategy:
      matrix:
        # For these target platforms
        include:
          - os: ubuntu-latest
          - os: macos-11
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --all-features

  release_crates:
    needs: [test]
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Release crate versions (if required)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-release
        run: |
          mkdir cargo-release-download && cd cargo-release-download && \
          wget https://github.com/crate-ci/cargo-release/releases/download/v0.24.11/cargo-release-v0.24.11-x86_64-unknown-linux-gnu.tar.gz  && \
          tar -xzvf cargo-release-v0.24.11-x86_64-unknown-linux-gnu.tar.gz && \
          cp ./cargo-release /usr/local/bin/ && \
          chmod +x /usr/local/bin/cargo-release && \
          cd .. && rm -r cargo-release-download
      - name: Publish new crate version
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        # HACK: we are currently just ignoring the failure, as the release command will fail if all packages are already published
        run: cargo release publish --execute --no-confirm || true